diff -udr origin.sources/jabsorb-1.3.1/src/org/jabsorb/JSONSerializer.java origin.sources.patched/jabsorb-1.3.1/src/org/jabsorb/JSONSerializer.java
--- origin.sources/jabsorb-1.3.1/src/org/jabsorb/JSONSerializer.java	2009-03-04 21:30:18.000000000 +0200
+++ origin.sources.patched/jabsorb-1.3.1/src/org/jabsorb/JSONSerializer.java	2010-01-03 23:44:53.475796694 +0200
@@ -441,27 +441,12 @@
    * @param s A class implementing the Serializer interface (usually derived
    *          from AbstractSerializer).
    *
-   * @throws Exception If a serialiser has already been registered for a class.
    */
   public void registerSerializer(Serializer s) throws Exception
   {
-    Class classes[] = s.getSerializableClasses();
-    Serializer exists;
-    synchronized (serializerSet)
-    {
-      if (serializableMap == null)
-      {
-        serializableMap = new HashMap();
-      }
-      for (int i = 0; i < classes.length; i++)
-      {
-        exists = (Serializer) serializableMap.get(classes[i]);
-        if (exists != null && exists.getClass() != s.getClass())
-        {
-          throw new Exception("different serializer already registered for "
-              + classes[i].getName());
-        }
-      }
+   Class classes[] = s.getSerializableClasses();
+   synchronized (serializerSet)
+   {
       if (!serializerSet.contains(s))
       {
         if (log.isDebugEnabled())
@@ -471,12 +456,15 @@
         s.setOwner(this);
         serializerSet.add(s);
         serializerList.add(0, s);
+        if (serializableMap == null) {
+          serializableMap = new HashMap();
+        }
         for (int j = 0; j < classes.length; j++)
         {
           serializableMap.put(classes[j], s);
         }
       }
-    }
+   }
   }
 
   /**
