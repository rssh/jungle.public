<?xml version="1.0"?>
<project name="jungle.gwt.util" default="build" basedir="."
  xmlns:ivy="antlib:fr.jayasoft.ivy.ant"
  xmlns:phpjao="antlib:ua.gradsoft.phpjao"
 >
    <property file="build.properties" />
    <property file="build.local.properties" />

    <import file="build-ivy.xml" />
    
<!-- directories -->    
    <property name="build.dir" value="build"/>
    <property name="dist.dir" value="dist"/>
    <property name="lib.dir" value="lib"/>
    <property name="src.dir" value="src"/>
    
    <path id="core.classpath">
       <pathelement location="${lib.dir}/gwt-servlet.jar" />
       <fileset dir="${lib.dir}" includes="*.jar" />
    </path>

    <!-- targets -->
    <target name="prepare">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${dist.dir}"/>
    </target>
    
    <target name="clean">
        <!--
        <delete>
            <fileset dir="${build.dir}" includes="**/*.class" />
            <fileset dir="${dist.dir}" includes="**/*.ear,**/*.war,**/*.jar" />
        </delete>
        -->
        <delete dir="${build.dir}"/>
        <delete dir="${dist.dir}"/>
    </target>

    <target name="clean-all" depends="clean" >
     <delete>
      <fileset dir="lib" includes="**/*.jar,**/*.zip" />
     <!--
      <fileset dir="dist" includes="**/*.xml,**/*.jar,**/*.sql,**/*.zip" />
     -->
     </delete>
    </target>

    <target name="build" depends="retrieve-libs,prepare" >
        <javac destdir="${build.dir}" 
                srcdir="${src.dir}" 
                includes="**/*.java" 
                deprecation="on" 
                debug="${debug}" >
            <!--<compilerarg  line="-Xlint:unchecked" />-->
            <classpath>
              <path refid="core.classpath"/>
            </classpath>
        </javac>
        <jar destfile="${dist.dir}/jungle.gwt.util-${version}.jar"
                index="true">
            <fileset dir="${build.dir}" >
             <include name="**/*.class" />
             <exclude name="ua/gradsoft/jungle/gwt/util/server/**/*.class" />
             <exclude name="ua/gradsoft/jungle/gwt/util/client/test/**/*.class" />
            </fileset>
            <fileset dir="${src.dir}" >
             <include name="**/*.java" />
             <include name="**/*.xml" />
             <exclude name="ua/gradsoft/jungle/gwt/util/server/**/*.java" />
             <exclude name="ua/gradsoft/jungle/gwt/util/client/test/**/*.java" />
            </fileset>
            <manifest>
                <attribute name="Build-By" value="${user-name}"/>
            </manifest>
        </jar>
    </target>


   <target name="publish" depends="distributives">
     <ivy:publish resolver="datacenter.gradsoft.ua" pubrevision="${version}" 
                  overwrite="true" 
                  replacedynamicrev="false"
                  >
       <artifacts pattern="dist/[artifact]-[revision].[ext]" />
     </ivy:publish>
    </target>

   <target name="publish.local" depends="distributives">
     <ivy:publish resolver="jungle.repo" pubrevision="${version}" 
                  overwrite="true" 
                  replacedynamicrev="false"
                  >
       <artifacts pattern="dist/[artifact]-[revision].[ext]" />
     </ivy:publish>
    </target>

    <target name="distributives" depends="build,docs,source-distributive" />

    <target name="docs" depends="javadoc" />

    <target name="javadoc" >
     <javadoc destdir="docs/javadoc" >
       <sourcefiles>
        <fileset dir="src">
          <include name="**/*.java" />
        </fileset>
       </sourcefiles>
       <classpath>
        <path refid="core.classpath"/>
        <pathelement location="${build.dir}" />
       </classpath>
     </javadoc>
     <zip destfile="dist/jungle.gwt.util-docs-${version}.zip" 
          basedir="docs/javadoc"
     />
    </target>

    <target name="source-distributive" depends="build">
      <mkdir dir="dist/jungle.gwt.util-src-${version}" />
      <copy todir="dist/jungle.gwt.util-src-${version}" >
      <fileset dir=".">
        <include name="**/*.xml" />
        <include name="**/*.java" />
        <include name="**/*.properties" />
        <include name="src/*" />
        <include name="lib/*" />
        <include name="docs/**/*" />
        <exclude name="dist/*.*" />
        <exclude name="dist/**/*.*" />
        <exclude name="nbproject/private/*" />
        <exclude name="**/*.class" />
      </fileset>
     </copy>
     <zip destfile="dist/jungle.gwt.util-src-${version}.zip" >
       <zipfileset dir="dist/jungle.gwt.util-src-${version}" 
                   prefix="jungle.gwt.util-src-${version}" />
     </zip>
     <delete dir="dist/jungle.gwt.util-src-${version}" />
    </target>

    
</project>
