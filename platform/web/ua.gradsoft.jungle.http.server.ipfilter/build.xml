<?xml version="1.0"?>
<project name="jungle.http.server.ipfilter" default="build" basedir="." 
   xmlns:ivy="antlib:fr.jayasoft.ivy.ant"
>

<!-- properties -->

<property file="build.properties" />
<property file="${jungle.public.home}/build.properties" />
<property name="version" value="${global.version}-${local.version}" />

<import file="build-ivy.xml" />

<condition property="ivy.int.home" value="${ivy.home}" else="${user.home}/.ivy">
  <isset property="ivy.home" />
</condition>
<!--<property name="ivy.lib.dir" value="${ivy.int.home}/cache" />  -->
  
<!-- targets -->


 <path id="compile.path">
   <fileset dir="lib">
    <include name="*.jar" />
   </fileset>
 </path>

 <target name="build" depends="retrieve-libs">
  <javac srcdir="src" includes="**/*.java" deprecation="on" debug="${debug}" >
    <classpath refid="compile.path" />
  </javac>
  <jar destfile="target/jungle.http.server.ipfilter-${version}.jar"
       basedir="src" includes="**/*.class"
       index="true"
  />
 </target>

 <target name="source-distributive" depends="build">
   <mkdir dir="target/jungle.http.server.ipfilter-src-${version}" />
   <copy todir="target/jungle.http.server.ipfilter-src-${version}" >
    <fileset dir=".">
     <include name="src/*" />
     <include name="src/**/*.java" />
     <include name="**/*.xml" />
     <include name="**/*.properties" />
     <exclude name="target/*.jar" />
     <exclude name="target/*.tar.ga" />
     <exclude name="target/jungle.http.server.ipfilter-*" />
     <exclude name="**/*.class" />
     <exclude name="nbproject/private" />
    </fileset>
   </copy>
   <tar basedir="target"
        destfile="target/jungle.http.server.ipfilter-src-${version}.tar"
        defaultexcludes="yes"
        includes="jungle.http.server.ipfilter-src-${version}/**/*"
   />
   <gzip src="target/jungle.http.server.ipfilter-src-${version}.tar"
         destfile="target/jungle.http.server.ipfilter-src-${version}.tar.gz"
   />
   <delete file="target/jungle.http.server.ipfilter-src-${version}.tar" />
   <delete dir="target/jungle.http.server.ipfilter-src-${version}" />
 </target>

 <target name="distributives" 
         depends="build,source-distributive,docs-distributive" />

 <target name="docs" depends="javadoc" />
 <target name="javadoc" >
   <javadoc destdir="docs/api" failonerror="false" >
     <!--packageset dir="src" /-->
   	 <sourcefiles>
   	        <fileset dir="src">
   	          <include name="**/*" />
   	        </fileset>
   	 </sourcefiles>
     <classpath refid="compile.path" />
   </javadoc>
 </target>

 <target name="docs-distributive" depends="docs">
  <mkdir dir="target/jungle.http.server.ipfilter-docs-${version}" />
  <copy todir="target/jungle.http.server.ipfilter-docs-${version}" >
     <fileset dir=".">
       <include name="docs/**/*" />
     </fileset>
  </copy>
  <tar basedir="target" 
       destfile="target/jungle.http.server.ipfilter-docs-${version}.tar"
       defaultexcludes="yes"
       includes="jungle.http.server.ipfilter-docs-${version}/**/*" />
  <gzip src="target/jungle.http.server.ipfilter-docs-${version}.tar"
       destfile="target/jungle.http.server.ipfilter-docs-${version}.tar.gz"
  />
  <delete file="target/jungle.http.server.ipfilter-docs-${version}.tar" />
  <delete dir="target/jungle.http.server.ipfilter-docs-${version}" />
 </target>

 <target name="publish" depends="distributives">
    <ivy:publish resolver="write.datacenter.gradsoft.ua" 
                 pubrevision="${version}" 
                 overwrite="true" 
                 replacedynamicrev="false"
    >
      <artifacts pattern="target/[artifact]-[revision].[ext]" />
    </ivy:publish>
 </target>

 <target name="publish.local" depends="distributives">
    <ivy:publish resolver="jungle.repo" 
                 pubrevision="${version}" 
                 overwrite="true" 
                 replacedynamicrev="false"
    >
      <artifacts pattern="target/[artifact]-[revision].[ext]" />
    </ivy:publish>
 </target>



 <target name="clean">
  <delete>
   <fileset dir="src"   includes="**/*.class" />
  </delete>
 </target>

 <target name="clean-all" depends="clean">
  <delete>
   <fileset dir="target"   includes="**/*.jar,**/*.tar.gz" />
   <fileset dir="lib"   includes="**/*.jar" />
  </delete>
 </target>



</project>
