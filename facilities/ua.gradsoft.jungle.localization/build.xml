<?xml version="1.0"?>
<project name="jungle.localization" default="build" basedir="."
  xmlns:ivy="antlib:fr.jayasoft.ivy.ant"
  xmlns:phpjao="antlib:ua.gradsoft.phpjao"
 >
    <property file="build.properties" />
    <property file="${jungle.public.home}/build.properties" />
    <property file="build.local.properties" />

    <property name="version" value="${global.version}-${local.version}" />

    <import file="build-ivy.xml" />
    
<!-- directories -->    
    <property name="src.dir" value="."/>
    <property name="build.dir" value="build"/>
    <property name="dist.dir" value="dist"/>
    <property name="lib.dir" value="lib"/>
    <property name="etc.dir" value="etc"/>

    <property name="src-api.dir" value="src/api"/>
    <property name="src-impl.dir" value="src/impl"/>
    <property name="src-test.dir" value="src/test"/>
    
    <property name="build-api.dir" value="${build.dir}/api"/>
    <property name="build-impl.dir" value="${build.dir}/impl"/>
    <property name="build-test.dir" value="${build.dir}/test"/>
    
    <path id="core.classpath">
       <fileset dir="${lib.dir}" includes="*.jar" />
    </path>


    <!-- targets -->
    <target name="prepare">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build-api.dir}"/>
        <mkdir dir="${build-impl.dir}"/>
        <mkdir dir="${build-test.dir}"/>
        
        <mkdir dir="${dist.dir}"/>
    </target>
    
    <target name="clean">
        <delete quiet="true" >
            <fileset dir="${build.dir}" includes="**/*.class" />
            <fileset dir="${dist.dir}" includes="**/*.ear,**/*.war,**/*.jar" />
        </delete>
    </target>

    <target name="clean-all">
     <delete quiet="true" >
      <fileset dir="lib" includes="**/*.jar,**/*.txt" />
      <fileset dir="dist" includes="**/*.xml,**/*.jar,**/*.sql,**/*.part,**/*.zip" />
     </delete>
    </target>

    
    <target name="build" depends="build-init-sql,build-api,build-impl,build-gwt" >
      <copy file="etc/persistence.xml.part" 
            tofile="${dist.dir}/jungle.localization.persistence.xml-${version}.part"
      />
      <copy file="sql/pgsql/create_localization_pgsql.sql"
          tofile="${dist.dir}/create_localization_pgsql-${version}.sql" />
      <copy file="sql/pgsql/init_localization_pgsql.sql"
          tofile="${dist.dir}/init_localization_pgsql-${version}.sql" />
      <copy file="sql/pgsql/drop_localization_pgsql.sql"
          tofile="${dist.dir}/drop_localization_pgsql-${version}.sql" />
      <copy file="sql/hsql/create_localization_hsql.sql"
          tofile="${dist.dir}/create_localization_hsql-${version}.sql" />
      <copy file="sql/hsql/init_localization_hsql.sql"
          tofile="${dist.dir}/init_localization_hsql-${version}.sql" />
      <copy file="sql/hsql/drop_localization_hsql.sql"
          tofile="${dist.dir}/drop_localization_hsql-${version}.sql" />
    </target>
    
    <target name="build-api" depends="retrieve-libs,prepare" >
        <javac destdir="${build-api.dir}" 
                srcdir="${src-api.dir}" 
                includes="**/*.java" 
                target="${javac.target}"
                deprecation="on" 
                debug="${debug}" >
            <!--<compilerarg  line="-Xlint:unchecked" />-->
            <classpath>
              <path refid="core.classpath"/>
            </classpath>
        </javac>
        <jar destfile="${dist.dir}/jungle.localization.api-${version}.jar"
                basedir="${build-api.dir}" 
                includes="**/*.class,**/*.dtd,META-INF/**/*" 
                index="true">
            <include name="build"/>
            <manifest>
                <attribute name="Build-By" value="${user-name}"/>
            </manifest>
        </jar>
    </target>

    <target name="build-impl" depends="retrieve-libs,prepare" >
        <javac destdir="${build-impl.dir}" 
                srcdir="${src-impl.dir}" 
                includes="**/*.java" 
                target="${javac.target}"
                deprecation="on" 
                debug="${debug}" >
            <!--<compilerarg  line="-Xlint:unchecked" />-->
            <classpath>
                <path refid="core.classpath"/>
                <pathelement location="${build-api.dir}" />
            </classpath>
        </javac>
        <jar destfile="${dist.dir}/jungle.localization.impl-${version}.jar"
                basedir="${build-impl.dir}" 
                includes="**/*.class,**/*.dtd,META-INF/**/*" 
                index="true">
            <include name="build"/>
            <manifest>
                <attribute name="Build-By" value="${user-name}"/>
            </manifest>
        </jar>
    </target>

   <target name="build-gwt" depends="build-api" >
    <jar destfile="${dist.dir}/jungle.localization.gwt-${version}.jar" 
         index="true"
    >
      <fileset dir="${build-api.dir}" includes="**/*.class" />
      <fileset dir="${src-api.dir}" includes="**/*.java" />
      <fileset dir="etc/gwt" includes="**/*.xml" />
    </jar>
   </target>

   <target name="build-test" depends="build-impl, build-api">
      <javac destdir="${build-test.dir}" 
             srcdir="${src-test.dir}" 
             includes="**/*.java" 
             deprecation="on"
                target="${javac.target}"
             debug="${debug}"
      >
          <classpath>
            <path refid="core.classpath"/>
            <pathelement location="${build-api.dir}" />
            <pathelement location="${build-impl.dir}" />
          </classpath>
      </javac>
      <jar destfile="${dist.dir}/jungle.localization.test-${version}.jar">
        <fileset dir="${build-test.dir}" includes="**/*.class" />
        <fileset dir="${src-test.dir}" includes="META-INF/*.*" />
      </jar>
   </target>
    

   <target name="build-init-sql" depends="retrieve-libs" >
     <ant dir="tools/init.data" />
     <copy file="tools/init.data/init.sql"
          tofile="sql/pgsql/init_localization_pgsql.sql"
     />
     <copy file="tools/init.data/init.sql"
          tofile="sql/hsql/init_localization_hsql.sql"
     />
   </target>

   <target name="publish" depends="distributives">
     <ivy:publish resolver="datacenter.gradsoft.ua" pubrevision="${version}" 
                  overwrite="true" 
                  replacedynamicrev="false"
                  >
       <artifacts pattern="dist/[artifact]-[revision].[ext]" />
     </ivy:publish>
    </target>

   <target name="publish.local" depends="distributives">
     <ivy:publish resolver="jungle.repo" pubrevision="${version}" 
                  overwrite="true" 
                  replacedynamicrev="false"
                  >
       <artifacts pattern="dist/[artifact]-[revision].[ext]" />
     </ivy:publish>
    </target>

    <target name="distributives" depends="build,docs,source-distributive" />

    <target name="docs" depends="javadoc" />

    <target name="javadoc" >
     <javadoc destdir="docs/javadoc" >
       <sourcefiles>
        <fileset dir="src/api">
          <include name="**/*.java" />
        </fileset>
        <fileset dir="src/impl">
          <include name="**/*.java" />
        </fileset>
       </sourcefiles>
       <classpath>
        <path refid="core.classpath"/>
        <pathelement location="${build-api.dir}" />
        <pathelement location="${build-impl.dir}" />
       </classpath>
     </javadoc>
     <zip destfile="dist/jungle.localization-docs-${version}.zip" 
          basedir="docs/javadoc"
     />
    </target>

    <target name="source-distributive" depends="build">
      <mkdir dir="dist/jungle.localization-src-${version}" />
      <copy todir="dist/jungle.localization-src-${version}" >
      <fileset dir=".">
        <include name="**/*.xml" />
        <include name="**/*.java" />
        <include name="**/*.properties" />
        <include name="src/*" />
        <include name="lib/*" />
        <include name="docs/**/*" />
        <exclude name="dist/*.*" />
        <exclude name="dist/**/*.*" />
        <exclude name="nbproject/private/*" />
        <exclude name="**/*.class" />
      </fileset>
     </copy>
     <zip destfile="dist/jungle.localization-src-${version}.zip" >
       <zipfileset dir="dist/jungle.localization-src-${version}" 
                   prefix="jungle.localization-src-${version}" />
     </zip>
     <delete dir="dist/jungle.localization-src-${version}" />
    </target>

    <target name="test" depends="build-test,build-init-sql">
      <junit printsummary="yes" haltonfailure="yes" showoutput="yes"
             dir="${basedir}" >
        <classpath>
          <path refid="core.classpath"/>
          <pathelement location="${dist.dir}/jungle.localization.api-${version}.jar" />
          <pathelement location="${dist.dir}/jungle.localization.impl-${version}.jar" />
          <pathelement location="${dist.dir}/jungle.localization.test-${version}.jar" />
        </classpath>
        <formatter type="plain"/>
        <batchtest>
          <fileset dir="src/test">
           <include name="**/*Test.java" />
           <exclude name="**/AllTests.java" />
          </fileset>
        </batchtest>
      </junit>
    </target>
    
</project>
